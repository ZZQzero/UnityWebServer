<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IMMusicianCommon</name>
    </assembly>
    <members>
        <member name="M:com.immusician.common.PtrConvert.Add(System.IntPtr,System.Int32)">
            <summary>
            把一个指针地址 加上偏移量 获得新的指针
            </summary>
            <returns>偏移后的指针.</returns>
            <param name="ptr">需要操作的指针.</param>
            <param name="offset">偏移量.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:com.immusician.common.PtrConvert.PtrToStructure``1(System.IntPtr)" -->
        <!-- Badly formed XML comment ignored for member "M:com.immusician.common.PtrConvert.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" -->
        <member name="M:com.immusician.common.PtrConvert.StructureToPtr``1(``0[],System.IntPtr,System.Boolean)">
            <summary>
            将数据从指定类型的托管对象数组封送到非托管内存块IntPtr。
            </summary>
            <param name="obj">包含要封送的数据的托管对象数组。 该对象必须是格式化类的结构或实例数组。</param>
            <param name="ptr">指向非托管内存块的指针，必须在调用此方法之前分配该指针。</param>
            <param name="fDeleteOld">一般用false，如果此内存地址已包含数据，则用true，否则可能会导致内存泄露。</param>
            <typeparam name="T">托管对象的类型.</typeparam>
        </member>
        <member name="M:com.immusician.common.PtrConvert.convertGenericArr``2(System.IntPtr,System.Int32,com.immusician.common.ConvertDelegate{``0})">
            <summary>
            将数组数据从非托管内存块封送到泛型类型参数指定的类型的新分配托管对象数组。
            </summary>
            <returns>一个包含 ptr 参数指向的数据的托管对象数组。</returns>
            <param name="ptr">指向非托管内存块的指针。</param>
            <param name="length">数组长度</param>
            <param name="callBack">处理非基础类型的回调.</param>
            <typeparam name="T1">需要转换到的数据类型.</typeparam>
            <typeparam name="T2">传入参数的数据类型.</typeparam>
        </member>
        <member name="M:com.immusician.common.PtrConvert.convertIntArr(System.IntPtr,System.Int32)">
            <summary>
            将int数组数据从非托管内存块封送到新分配托管对象int数组。
            </summary>
            <returns>int数组.</returns>
            <param name="ptr">Ptr地址.</param>
            <param name="length">数组长度.</param>
        </member>
        <member name="M:com.immusician.common.PtrConvert.convertFloatArr(System.IntPtr,System.Int32)">
            <summary>
            将float数组数据从非托管内存块封送到新分配托管对象float数组。
            </summary>
            <returns>float数组.</returns>
            <param name="ptr">Ptr地址.</param>
            <param name="length">数组长度.</param>
        </member>
        <member name="M:com.immusician.common.PtrConvert.convertByteArr(System.IntPtr,System.Int32)">
            <summary>
            将byte数组数据从非托管内存块封送到新分配托管对象byte数组。
            </summary>
            <returns>int数组.</returns>
            <param name="ptr">Ptr地址.</param>
            <param name="length">数组长度.</param>
        </member>
        <member name="M:com.immusician.common.PtrConvert.unConvertArr``1(``0[],System.Boolean)">
            <summary>
            将指定类型的托管对象数组封送到非托管内存块.
            </summary>
            <returns>IntPtr指针.</returns>
            <param name="arr">指定类型的托管对象数组.</param>
            <param name="fDeleteOld">一般用false，如果此内存地址已包含数据，则用true，否则可能会导致内存泄露.</param>
            <typeparam name="T">托管对象的类型.</typeparam>
        </member>
        <member name="M:com.immusician.common.PtrConvert.unConvertArrArr``1(``0[][],System.Boolean)">
            <summary>
            将指定类型的托管对象的二维数组封送到非托管内存块.
            </summary>
            <returns>IntPtr指针</returns>
            <param name="arr">指定类型的托管对象二维数组.</param>
            <param name="fDeleteOld">一般用false，如果此内存地址已包含数据，则用true，否则可能会导致内存泄露.</param>
            <typeparam name="T">托管对象的类型.</typeparam>
        </member>
        <member name="M:com.immusician.common.PtrConvert.convertString(System.IntPtr)">
            <summary>
            将非托管 ANSI 字符串中第一个空字符之前的所有字符复制到托管 String，并将每个 ANSI 字符扩展为 Unicode 字符。
            </summary>
            <returns>包含非托管 ANSI 字符串的副本的托管字符串。 如果 ptr 为 null，则该方法返回一个 Null 字符串。</returns>
            <param name="ptr">非托管字符串的第一个字符的地址。</param>
        </member>
    </members>
</doc>
