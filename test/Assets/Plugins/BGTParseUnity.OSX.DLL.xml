<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BGTParseUnity.OSX.DLL</name>
    </assembly>
    <members>
        <member name="T:com.immusician.BGT.BGTParse">
            <summary>
            BGT解析.
            </summary>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.newBgtRender">
            <summary>
            创建BgtRender
            </summary>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.parse(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            解析bgt文件
            </summary>
            <param name="fileName">bgt文件路径</param>
            <param name="headNum">添加空小节节数 默认0</param>
            <param name="isNolinear">是否展开谱子 默认0</param>
            <param name="isGame">是否小游戏 默认-1</param>
            <param name="gameIndex">小游戏类型 默认-1</param>
            <returns>MusicScoreRender</returns>
            <example> 以下代码说明如何调用BgtParse方法: </example>
            <code>
            string bgtPath = Application.streamingAssetsPath + "/bgt/demo.bgt";
            int headNum = 1;
            MusicScoreRender msRender = BGTParse.parse(bgtPath, headNum);
            </code>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.render(com.immusician.BGT.structs.RenderInfor,System.Int32[],System.Int32[],System.Single,System.Int32)">
             <summary>
             渲染数据
             </summary>
             <param name="renderInfor">渲染参数信息</param>
             <param name="indexArr">渲染轨道数组，默认空 渲染第0轨道</param>
             <param name="voiceArr">多声部数组，默认空 不渲染多声部</param>
             <param name="multipleWidth">多行显示宽度 默认-1 不按多行渲染</param>
             <param name="isNoTail">isNoTail</param>
             <returns>MusicScoreRender</returns>
             <example> 以下代码说明如何调用render方法: </example>
             <code>
             //渲染参数
             RenderInfor _renderInfor = new RenderInfor();
             _renderInfor.baseNoteWidth = 1334 / 22.2f ; //2.0f * 30 ;
             _renderInfor.spaceHeight = 30;
             _renderInfor.viewWidth = 1334;
             _renderInfor.viewHeight = 750;
             _renderInfor.type = 0; //除五线谱需要变速的用1 其他都用0
            
             //可选参数 要渲染的轨道
             int[] indexArr = { 0 };
            
             //渲染谱子数据
             MusicScoreRender msRender = BGTParse.render(_renderInfor, indexArr);
             </code>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.currentMSRenderPtr">
            <summary>
            获取当前MusicRenderPtr.
            </summary>
            <returns>MusicRenderPtr.</returns>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.bgt_addKey(System.Int32[],System.Int32[],System.Int32)">
            <summary>
            升调.
            </summary>
            <param name="indexArr">Index arr.</param>
            <param name="keyArr">Key arr.</param>
            <param name="key">Key.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.bgt_free">
            <summary>
            释放BgtRender
            </summary>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.render_calMeasureRenderCelfKey(System.IntPtr,System.Int32,System.Byte,System.Int32,System.Int32,System.Int32[])">
            <summary>
            改变谱号、调号.
            </summary>
            <returns>MusicScoreRender.</returns>
            <param name="bgtRenderPtr">Bgt render ptr.</param>
            <param name="trackIndex">Track index.</param>
            <param name="celf">Celf.</param>
            <param name="key">Key.</param>
            <param name="detOctave">Det octave.</param>
            <param name="indexArr">Index arr.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.render_calBeatRenderForOctaveAB(System.IntPtr,System.Int32,System.Byte,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte)">
            <summary>
            改变某个谱号、调号.
            </summary>
            <returns>The cal beat render for octave ab.</returns>
            <param name="bgtRenderPtr">Bgt render ptr.</param>
            <param name="trackIndex">Track index.</param>
            <param name="celf">Celf.</param>
            <param name="key">Key.</param>
            <param name="detOctave">Det octave.</param>
            <param name="measureIndex">Measure index.</param>
            <param name="beatIndex">Beat index.</param>
            <param name="octaveAB">Octave ab.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.reuse_createArr(System.Single,System.Single[],System.Single)">
            <summary>
            创建重用数组
            </summary>
            <returns>The create arr.</returns>
            <param name="offset">当前偏移.</param>
            <param name="offsetArr">偏移数组.</param>
            <param name="size">显示的尺寸.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.reuse_calUnionArr(System.Int32[],System.Int32[])">
            <summary>
            计算重复的项目
            </summary>
            <returns>重复的数据数组.</returns>
            <param name="preArr">之前的数据.</param>
            <param name="curArr">新的数据.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.reuse_calUnionLength(System.Int32[],System.Int32[])">
            <summary>
            计算非重复的项目
            </summary>
            <returns>非重复的数据数组.</returns>
            <param name="preArr">之前的数据.</param>
            <param name="curArr">新的数据.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.reuse_isEqual(System.Int32[],System.Int32[])">
            <summary>
            计算两个数组内容是否相投
            </summary>
            <returns><c>true</c>, if is equal was reused, <c>false</c> otherwise.</returns>
            <param name="arr1">Arr1.</param>
            <param name="arr2">Arr2.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.GetKeyName(System.Int32)">
            <summary>
            获取key名称（20 = "1=C"）
            </summary>
            <returns>The key name.</returns>
            <param name="key">Key Id.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:com.immusician.BGT.BGTParse.sliceMusicScoreRender(com.immusician.BGT.structs.MusicScoreRender,System.Int32,System.Int32,System.Int32)" -->
        <member name="M:com.immusician.BGT.BGTParse.getHeadMeasureTime(com.immusician.BGT.structs.MusicScoreRender,System.Int32)">
            <summary>
            获取空节时间
            </summary>
            <returns>空节所占用的时间.</returns>
            <param name="msRender">msRender.</param>
            <param name="headNum">空节数.</param>
        </member>
        <member name="M:com.immusician.BGT.BGTParse.layoutMusicScoreRenderToVertical(com.immusician.BGT.structs.MusicScoreRender,com.immusician.BGT.structs.RenderInfor,com.immusician.BGT.structs.LineRender[]@,System.Boolean,System.Int32)">
            <summary>
            竖版布局（六线谱使用）
            </summary>
            <returns>The music score render to vertical.</returns>
            <param name="msRender">Ms render.</param>
            <param name="renderInfor">Render infor.</param>
            <param name="outLineRenderArr">Out line render arr.</param>
            <param name="playMode">If set to <c>true</c> play mode.</param>
            <param name="trackIndex">Track index.</param>
        </member>
        <member name="T:com.immusician.BGT.BGTUtil">
            <summary>
            创建和弦练习的工具类
            </summary>
        </member>
        <member name="T:com.immusician.BGT.GameScoreClass">
            <summary>
            计算得分的工具类
            </summary>
        </member>
        <member name="F:com.immusician.BGT.GameScoreClass.GameScore.curStatus">
            <summary>
            当前状态
            </summary>
        </member>
        <member name="F:com.immusician.BGT.GameScoreClass.GameScore.statusIndex">
            <summary>
            状态索引
            </summary>
        </member>
        <member name="F:com.immusician.BGT.GameScoreClass.GameScore.curScore">
            <summary>
            当前得分
            </summary>
        </member>
        <member name="F:com.immusician.BGT.GameScoreClass.GameScore.curTotalScore">
            <summary>
            当前总分
            </summary>
        </member>
        <member name="F:com.immusician.BGT.GameScoreClass.GameScore.priority">
            <summary>
            优先级 0 默认 得分优先 1 规则优先
            </summary>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.init(System.Single[])">
            <summary>
            初始化GameScore
            </summary>
            <param name="statusArr">状态数组.</param>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.addRule(System.Single[][],System.Int32)">
            <summary>
            添加规则
            </summary>
            <param name="ruleArr">规则数组.</param>
            <param name="priority">优先级（0=默认 得分优先 1=规则优先）.</param>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.update(System.Single)">
            <summary>
            更新状态
            </summary>
            <returns>The update.</returns>
            <param name="status">Status.</param>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.resetData">
            <summary>
            重置得分数据
            </summary>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.free">
            <summary>
            释放GameScore
            </summary>
        </member>
        <member name="M:com.immusician.BGT.GameScoreClass.CalGameLevel(System.Single,System.Single,System.Int32@)">
            <summary>
            计算等级
            </summary>
            <returns>等级字符串.</returns>
            <param name="right">正确率.</param>
            <param name="perfect">Perfect比例.</param>
            <param name="levelIndex">返回等级下标.</param>
        </member>
        <member name="F:com.immusician.BGT.structs.RenderInfor.spaceHeight">
            <summary>
            五线谱线间距
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.RenderInfor.baseNoteWidth">
            <summary>
            五线谱音符基准宽度
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.RenderInfor.type">
            <summary>
            曲谱类型 0=匀速  1=8分音符以上变速  2=小节内匀速 3=等间距
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.isEmpty">
            <summary>
            是否是休止符
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.numerator">
            <summary>
            拍号 分子
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.denominator">
            <summary>
            拍号 分母
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.measureInforIndex">
            <summary>
            beat所在原始小节序号
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.measureRenderIndex">
            <summary>
            beat所在渲染的小节编号
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatInMeasureIndex">
            <summary>
            beat在这小节内的序号
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatRenderIndex">
            <summary>
            beat序号
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.upStroke">
            <summary>
            上扫弦
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.downStroke">
            <summary>
            下扫弦
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.upArpeggio">
            <summary>
            上琶音
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.downArpeggio">
            <summary>
            下琶音
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.noteRenderArr">
            <summary>
            beat内note的数组
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.length">
            <summary>
            note的个数
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.lyrics">
            <summary>
            beat对应的歌词
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatTime">
            <summary>
            beat所占时长
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatOffsetTime">
            <summary>
            beat偏移时间
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatWidth">
            <summary>
            beat宽度
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatOffsetWidth">
            <summary>
            beat偏移位置
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.beatOffsetMeasureWidth">
            <summary>
            beat在measure里的位置
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.soundArr">
            <summary>
            beat的声音数据（弦-品）
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.pitchArr">
            <summary>
            音高数据（0~127 60-->C4）
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.dynamicArr">
            <summary>
            力度
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.isDotted">
            <summary>
            五线谱-附点
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.isDoubleDotted">
            <summary>
            五线谱-双附点
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.duration">
            <summary>
            五线谱-时长（1全音符 2二分音符 以此类推）
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.nTuplet">
            <summary>
            是否是几连音
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.noteRenderLinearArr">
            <summary>
            noteRender线性列表 指向noteRenderArr
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.linearType">
            <summary>
            默认0升 1降
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.maxPositionIndex">
            <summary>
            note最大索引
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.minPositionIndex">
            <summary>
            note最小索引
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.startY">
            <summary>
            开始y坐标-绘制五线谱使用
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.endY">
            <summary>
            结束y坐标-绘制五线谱使用
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.groupNum">
            <summary>
            所属分组-绘制五线谱使用
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.numbered">
            <summary>
            简谱数组
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.isAsc">
            <summary>
            是否升半音
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.isDesc">
            <summary>
            是否降半音
            </summary>
        </member>
        <member name="F:com.immusician.BGT.structs.BeatRender.octave">
            <summary>
            八度增量 -4~4
            </summary>
        </member>
    </members>
</doc>
